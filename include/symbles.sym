//SYMB(rel, KEY, arg, have code, type, code)

SYMB(1, '+',  21, ADD_OPERATOR,  1,  {ass_type(ADD_OPERATOR); assign(0);})
SYMB(1, '-',  22, SUB_OPERATOR,  1,  {ass_type(SUB_OPERATOR); assign(0);})
SYMB(1, '*',  23, MUL_OPERATOR,  1,  {ass_type(MUL_OPERATOR); assign(0);})
SYMB(1, '/',  24, DIV_OPERATOR,  1,  {ass_type(DIV_OPERATOR); assign(0);})
SYMB(1, '\n', 25, NEW_LINE,      1,  {contin; new_line_counter; return 0;})
SYMB(1, ' ',  26, SPACE,         1,  {contin; return 0;})

SYMB(0, '(',  27,  OP_BRACKET,   1,  {ass_type(OP_BRACKET);  assign(0);})
SYMB(0, ')',  28,  CL_BRACKET,   1,  {ass_type(CL_BRACKET);  assign(0);})
SYMB(0, ';',  29,  END_LINE,     1,  {ass_type(END_LINE);    assign(0);})
SYMB(0, '{',  200, OP_C_BRACKET, 1, {ass_type(OP_C_BRACKET); assign(0);})
SYMB(0, '}',  201, CL_C_BRACKET, 1, {ass_type(CL_C_BRACKET); assign(0);})

SYMB(1, '&',  202, AND, 1, {contin; if (buf[*ip] == '&') {ass_type(AND); assign(0); assign(1);}})
SYMB(1, '|',  203,  OR, 1, {contin; if (buf[*ip] == '|') {ass_type(OR);  assign(0); assign(1);}})

SYMB(0, ',',  204,  NEXT_ELEM,     1,  {ass_type(NEXT_ELEM);    assign(0);})
